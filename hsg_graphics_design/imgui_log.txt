

## Widgets #
> Basic
    Button
    [x] checkbox
    (x) radio a ( ) radio b ( ) radio c
    Click Click Click Click Click Click Click
    Hover over me - or me 
    --------------------------------
    Value label
    AAAA combo (?)
    Hello, world! input text (?)
    123 - + input int
    (?)
    0.001000 - + input float
    0.100000
    0.200000
    0.300000
    input float3
    50 drag int (?)
    42% drag int 0..100
    1.000 drag float
    0.006700 ns drag small float
    0 slider int (?)
    ratio = 0.123 slider float
    0.0000 slider log float
    0 deg slider angle
    R:255 G:  0 B: 51 color 1
    (?)
    R:102 G:179 B:  0 A:128 color 2
    listbox
    (single select)
> Trees
    > Basic trees
        > Child 0
        > Child 1
        > Child 2
        > Child 3
        > Child 4
    > Advanced, with Selectable nodes
        (?)
        [ ] Align label with current X position)
        Hello!
        > Selectable Node 0
        > Selectable Node 1
        > Selectable Node 2
        > Selectable Leaf 3
        > Selectable Leaf 4
        > Selectable Leaf 5
> Collapsing Headers
    [x] Enable extra group
    
    ## Header #
    
    ## Header with a close button #
> Bullets
    Bullet point 1
    Bullet point 2
    On multiple lines
    Bullet point 3 (two calls)
    Button
> Text
    > Colored Text
        Pink
        Yellow
        Disabled (?)
    > Word Wrapping
        This text should automatically wrap on the edge of the window. The current implementation for text wrapping follows simple rules suitable for English and possibly other languages.
        200 Wrap width
        Test paragraph 1:
        The lazy dog is a good dog. This paragraph is made to fit within 200 pixels. Testing a 1 character word. The quick brown fox jumps over the lazy dog.
        Test paragraph 2:
        aaaaaaaa bbbbbbbb, c cccccccc,dddddddd. d eeeeeeee   ffffffff. gggggggg!hhhhhhhh
    > UTF-8 Text
        CJK text will only appears if the font was loaded with the appropriate CJK character ranges. Call io.Font->LoadFromFileTTF() manually to load extra character ranges.
        Hiragana: かきくけこ (kakikukeko)
        Kanjis: 日本語 (nihongo)
        日本語 UTF-8 input
> Images
    Below we are displaying the font texture (which is the only texture we have access to in this demo). Use the 'ImTextureID' type as storage to pass pointers or identifier to your own texture data. Hover the texture for a zoomed view!
    2048x512
    And now some textured buttons..
    Pressed 0 times.
> Combo
    [ ] ImGuiComboFlags_PopupAlignLeft
    [ ] ImGuiComboFlags_NoArrowButton
    [ ] ImGuiComboFlags_NoPreview
    AAAA combo 1
    aaaa combo 2 (one-liner)
    combo 3 (array)
    AAAA combo 4 (function)
> Selectables
    > Basic
        1. I am selectable
        2. I am selectable
        3. I am not selectable
        4. I am selectable
        5. I am double clickable
    > Selection State: Single Selection
        Object 0
        Object 1
        Object 2
        Object 3
        Object 4
    > Selection State: Multiple Selection
        (?)
        Object 0
        Object 1
        Object 2
        Object 3
        Object 4
    > Rendering more text into the same line
        main.c  2,345 bytes
        Hello.cpp 12,345 bytes
        Hello.h  2,345 bytes
    > In columns
        Item 0 Item 1 Item 2
        Item 3 Item 4 Item 5
        Item 6 Item 7 Item 8
        Item 9 Item 10 Item 11
        Item 12 Item 13 Item 14
        Item 15
    > Grid
        Sailor Sailor Sailor Sailor
        Sailor Sailor Sailor Sailor
        Sailor Sailor Sailor Sailor
        Sailor Sailor Sailor Sailor
> Filtered Text Input default decimal hexadecimal uppercase no blank "imgui" letters
    Password input
    password (?)
    password123 password (clear)
> Multi-line Text Input
    [ ] Read-only
> Plots widgets
    [x] Animate
    Frame Times
    avg 0.0 Lines
    Histogram 
    --------------------------------
    Sin func 70 Sample count
    Lines
    Histogram 
    --------------------------------
    1% Progress Bar
    23/1753
> Color/Picker Widgets
    [x] With Alpha Preview
    [ ] With Half Alpha Preview
    [x] With Options Menu (?)
    [ ] With HDR (?)
    Color widget: (?)
    R:114 G:144 B:154 MyColor
    Color widget HSV with Alpha:
    H:138 S: 66 V:154 A:200 MyColor
    Color widget with Float Display:
    R:0.447 G:0.565 B:0.604 A:0.784 MyColor
    Color button with Picker: (?)
    Color button with Custom Picker Popup:
    Palette
    Color button only:
    Color picker:
    [x] With Alpha
    [x] With Alpha Bar
    [x] With Side Preview [ ] With Ref Color
    RGB Input Inputs Mode
    Auto/Current Picker Mode (?)
    MyColor
    R:114 G:144 B:154 A:200
    Programmatically set defaults/options: (?)
    Uint8 + HSV Float + HDR
> Range Widgets
    Min: 10.0 % Max: 90.0 % range
    Min: 100 units Max: 1000 units range int (no bounds)
> Multi-component Widgets
    0.100000
    0.200000
    input float2
    0.100 0.200 drag float2
    0.100 0.200 slider float2
    1 5 drag int2
    1
    5
    input int2
    1 5 slider int2
    0.100000
    0.200000
    0.300000
    input float3
    0.100 0.200 0.300 drag float3
    0.100 0.200 0.300 slider float3
    1 5 100 drag int3
    1
    5
    100
    input int3
    1 5 100 slider int3
    0.100000
    0.200000
    0.300000
    0.440000
    input float4
    0.100 0.200 0.300 0.440 drag float4
    0.100 0.200 0.300 0.440 slider float4
    1
    5
    100
    255
    input int4
    1 5 100 255 drag int4
    1 5 100 255 slider int4
> Vertical Sliders
    0
    0.00
    sec 0.60
    sec 0.35
    sec 0.90
    sec

## Layout #

## Popups & Modal windows #

## Columns #

## Filtering #

## Inputs, Navigation & Focus #
